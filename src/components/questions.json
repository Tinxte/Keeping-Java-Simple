[
  {
    "question": "What structure is used to store data as key/value pairs?",
    "answer": "HashMaps"
  },
  {
    "question": "How do you add an item to a HashMap?",
    "answer": ".put() method"
  },
  {
    "question": "How do you access elements in a HashMap?",
    "answer": ".get() method"
  },
  {
    "question": "Which method returns a collection containing all keys in a HashMap?",
    "answer": ".keySet() method"
  },
  {
    "question": "How do you print a statement in Java?",
    "answer" : "System.out.println()"
  }, 
  {
    "question": "What happens when you omit a public or private access modifier when creating a class?",
    "answer" : "It is given the default access level, aka package-private, which should be avoided."
  },
  {
    "question": "What does a public access modifier give access to?",
    "answer" : "The public access level permits access to everything: Class, Package, Subclass and World"
  },
  {
    "question": "What does a private access modifier give access to?",
    "answer" : "The private access level permits access to the Class member, but not Package, Subclass or World"
  },
  {
    "question": "What does a protected access modifier give access to?",
    "answer" : "The protected access level permits access to Class, Package, and Subclass, but not to World"
  },
  {
    "question": "What is a constructor named in Java?",
    "answer" : "In Java, constructors have the same name as the class they are declared in."
  },
  {
    "question": "True or False: Constructors are declared with a return type.",
    "answer" : "False: Constructors are not declared with a return type."
  },
  {
    "question": "How would you create a constant variable in Java?",
    "answer" : "To make a constant in Java, initialize it as a static final variable."
  },
  {
    "question": "How do you annotate a method to create a unit test?",
    "answer" : "The annotation '@Test' is used to indicate a method should be treated as a test case."
  },
  {
    "question": "What are the four pillars of object-oriented programming?",
    "answer" : "Inheritance, Encapsulation, Abstraction, and Polymorphism"
  },
  {
    "question": "What is MVC?",
    "answer" : "MVC stands for Model-View-Controller, a design pattern where an application is broken into three components: models, views, and controllers."
  },
  {
    "question": "",
    "answer" : ""
  },
  {
    "question": "How do you declare a new HashMap?",
    "answer" : "HashMap<dataType, dataType> variableName = new HashMap<>();"
  }

]